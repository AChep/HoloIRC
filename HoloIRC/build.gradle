apply plugin: 'android'
apply plugin: 'android-test'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:15.0'
    compile 'com.android.support:support-v4:19.0.0'
    compile 'com.android.support:appcompat-v7:19.0.0'
    compile 'org.apache.commons:commons-lang3:3.0'
    compile 'com.squareup:otto:1.3.2'
    compile 'com.nineoldandroids:library:2.4.0'
    compile('de.keyboardsurfer.android.widget:crouton:1.8.1') {
        exclude group: 'com.google.android'
    }
    compile 'se.emilsjolander:stickylistheaders:2.1.3'
    compile project(':libraries:relay')
    compile project(':libraries:PagerSlidingTabStrip:library')
    compile project(':libraries:SlidingMenu:library')
    compile project(':libraries:android-numberpicker:library')
    compile fileTree(dir: 'libs', include: '*.jar')

    // TEST
    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:2.1.+'
    testCompile 'com.squareup:fest-android:1.0.+'
}

android {
    compileSdkVersion 19
    buildToolsVersion '19'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release
    }

    buildTypes {
        debug {
            packageNameSuffix '.debug'
        }

        release {
            signingConfig signingConfigs.release
        }
    }
}

def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}